{"version":3,"file":"static/js/418.9c57637e.chunk.js","mappings":"qMAqBA,EAlBe,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACb,oBAASC,UAAU,mBAAnB,UACE,+BACE,eAAIA,UAAU,SAAd,SAAwBD,EAAKE,UAC7B,eAAGD,UAAU,SAAb,WAAsB,cAAGE,KAAMH,EAAKI,KAAd,SAAqBJ,EAAKK,SAAhD,KAA8DL,EAAKM,YAJ1D,ECETC,EAAY,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAH,OAChB,iBAAKC,UAAU,YAAf,WACE,gBAAKA,UAAU,UAAUO,GAAG,eAC5B,gBAAKP,UAAU,QAAf,UACE,wCAEDD,EAAKS,KAAI,SAACP,GAAD,OACR,SAAC,EAAD,CACEF,KAAME,GACDA,EAAOG,OAHN,MANI,EAwBlBE,EAAUG,aAAe,CACvBV,KAAM,IAGR,QCNA,EAxBY,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACV,qBAASC,UAAU,iBAAnB,WACE,+BACE,2BAAI,cAAGE,KAAMH,EAAKI,KAAd,SAAqBJ,EAAKW,UAA9B,MAA8CX,EAAKY,aACnD,eAAGX,UAAU,YAAb,cAA2BD,EAAKa,iBAElC,eAAIZ,UAAU,SAAd,SACGD,EAAKc,OAAOL,KAAI,SAACM,GAAD,OACf,wBAAiBA,GAARA,EADM,QAPX,ECENC,EAAa,SAAC,GAAD,IAAGhB,EAAH,EAAGA,KAAH,OACjB,iBAAKC,UAAU,aAAf,WACE,gBAAKA,UAAU,UAAUO,GAAG,gBAC5B,gBAAKP,UAAU,QAAf,UACE,yCAEDD,EAAKS,KAAI,SAACQ,GAAD,OACR,SAAC,EAAD,CAAKjB,KAAMiB,GAAUA,EAAIN,QADjB,MANK,EAwBnBK,EAAWN,aAAe,CACxBV,KAAM,IAGR,QCJA,EA1Ba,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACX,qBAASC,UAAU,iBAAnB,WACE,+BACE,2BACE,cAAGE,KAAMH,EAAKI,KAAd,SAAqBJ,EAAKW,UAD5B,MAC4CX,EAAKY,aAEjD,eAAGX,UAAU,YAAb,cAA2BD,EAAKa,iBAElC,eAAIZ,UAAU,SAAd,SACGD,EAAKc,OAAOL,KAAI,SAACM,GAAD,OACf,wBAAiBA,GAARA,EADM,QATV,ECEPG,EAAW,SAAC,GAAD,IAAGlB,EAAH,EAAGA,KAAH,OACf,iBAAKC,UAAU,aAAf,WACE,gBAAKA,UAAU,UAAUO,GAAG,gBAC5B,gBAAKP,UAAU,QAAf,UACE,gDAEDD,EAAKS,KAAI,SAACQ,GAAD,OACR,SAAC,EAAD,CAAMjB,KAAMiB,GAAUA,EAAIN,QADlB,MANG,EAwBjBO,EAASR,aAAe,CACtBV,KAAM,IAGR,QClBA,EAbe,kBACb,iBAAKC,UAAU,SAAf,WACE,gBAAKA,UAAU,UAAUO,GAAG,YAC5B,iBAAKP,UAAU,QAAf,WACE,oCACA,6OALS,ECYf,EAXmB,kBACjB,iBAAKA,UAAU,aAAf,WACE,gBAAKA,UAAU,UAAUO,GAAG,gBAC5B,gBAAKP,UAAU,QAAf,UACE,SAAC,KAAD,CAAMkB,GAAG,WAAT,UACE,wEALW,ECYnB,EAfgB,CACd,CACEd,OAAQ,eACRH,OAAQ,iDACRE,KAAM,+BACNE,KAAM,MAER,CACED,OAAQ,qBACRH,OAAQ,yCACRE,KAAM,iCACNE,KAAM,OCcV,EAzBkB,CAChB,CACEK,QAAS,iBACTC,SAAU,iCACVR,KAAM,6BACNS,UAAW,wBACXC,OAAQ,CACN,2HACA,iLACA,wHAGJ,CACEH,QAAS,kBACTC,SAAU,sBACVR,KAAM,8BACNS,UAAW,cACXC,OAAQ,CACN,2IACA,0MACA,kICeN,EAnCiB,CACf,CACEH,QAAS,eACTC,SAAU,8BACVR,KAAM,0CACNS,UAAW,GACXC,OAAQ,CACN,mKACA,uKAGJ,CACEH,QAAS,iBACTC,SAAU,wCACVR,KAAM,2CACNS,UAAW,GACXC,OAAQ,CACN,8JACA,uLACA,mGAGJ,CACEH,QAAS,gBACTC,SAAU,wBACVR,KAAM,kDACNS,UAAW,GACXC,OAAQ,CACN,oIACA,+GACA,gFCfAM,EAAW,CACf,YACA,aACA,oBACA,SACA,cA6BF,EA1Be,kBACb,SAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,YAAY,0BAAjC,UACE,qBAAStB,UAAU,OAAOO,GAAG,SAA7B,WACE,6BACE,iBAAKP,UAAU,QAAf,WACE,eAAI,cAAY,UAAhB,UACE,SAAC,KAAD,CAAMkB,GAAG,SAAT,uBAEF,gBAAKlB,UAAU,iBAAf,SACGmB,EAASX,KAAI,SAACe,GAAD,OACZ,yBACE,cAAGrB,KAAI,WAAMqB,EAAIC,eAAjB,SAAmCD,KAD5BA,EADG,YAQpB,SAAC,EAAD,CAAWxB,KAAM0B,KACjB,SAAC,EAAD,CAAY1B,KAAM2B,KAClB,SAAC,EAAD,CAAU3B,KAAM4B,KAChB,SAAC,EAAD,KACA,SAAC,EAAD,QArBS,C","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/PersonalProjects/Work.js","components/Resume/PersonalProjects.js","components/Resume/Skills.js","components/Resume/References.js","data/resume/degrees.js","data/resume/positions.js","data/resume/projects.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job data={job} key={job.company} />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      company: PropTypes.string,\n      position: PropTypes.string,\n      link: PropTypes.string,\n      daterange: PropTypes.string,\n      points: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Work = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4>\n        <a href={data.link}>{data.company}</a> - {data.position}\n      </h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nWork.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Work;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Work from './PersonalProjects/Work';\n\nconst Projects = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Personal Projects</h3>\n    </div>\n    {data.map((job) => (\n      <Work data={job} key={job.company} />\n    ))}\n  </div>\n);\n\nProjects.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      company: PropTypes.string,\n      position: PropTypes.string,\n      link: PropTypes.string,\n      daterange: PropTypes.string,\n      points: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n};\n\nProjects.defaultProps = {\n  data: [],\n};\n\nexport default Projects;\n","import React from 'react';\n\nconst Skills = () => (\n  <div className=\"skills\">\n    <div className=\"link-to\" id=\"skills\" />\n    <div className=\"title\">\n      <h3>Skills</h3>\n      <p>\n        JavaScript, Python, SQL, HTML5, CSS3, Assembly, C++, Django, React,\n        Bootstrap, Docker, Git, REST API, Insomnia, RabbitMQ, CI/CD, Arduino,\n        Microservices, Monoliths, Domain-driven design, SQLite, PostgreSQL\n      </p>\n    </div>\n  </div>\n);\nexport default Skills;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const degrees = [\n  {\n    school: 'Hack Reactor',\n    degree: 'Software Engineering with Javascipt and Python',\n    link: 'https://www.hackreactor.com/',\n    year: 2022,\n  },\n  {\n    school: 'SUNY Buffalo State',\n    degree: 'B.S. Electrical Engineering Technology',\n    link: 'https://suny.buffalostate.edu/',\n    year: 2017,\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Galvanize Inc.',\n    position: 'Software Engineer in Residence',\n    link: 'https://www.galvanize.com/',\n    daterange: 'August 2022 - Present',\n    points: [\n      'Implemented critical features on production codebase for a student information system to be used by over 1000+ students.',\n      'Tutored a cohort of over 75+ engineering students, teaching the basics of web development using technologies such as Python and Javascript to develop full-stack applications.',\n      'Evaluated and reviewed code for students to help provide effective feedback to improve code efficiency and quality.',\n    ],\n  },\n  {\n    company: 'Skyline NYC LLC',\n    position: 'Electrical Engineer',\n    link: 'https://www.skylinenyc.net/',\n    daterange: '2019 - 2022',\n    points: [\n      'Impacted company output by becoming the only employee to work in all departments simultaneously exceeding the yearly revenue goal by 10%',\n      'Designed electrical power distribution, and fire alarm systems in residential and commercial buildings. All designs completed were in compliance with the national electric code and NYC building code.',\n      'Produced and administered functional tests for various systems, such as electrical distribution systems, UPS, and generators',\n    ],\n  },\n];\n\nexport default positions;\n","const projects = [\n  {\n    company: 'Digital Dash',\n    position: 'Network Performance Monitor',\n    link: 'https://gitlab.com/gjkk/amazing-project',\n    daterange: '',\n    points: [\n      \"Designed a network performance management website that includes a network speed test and a downloadable bandwidth monitor that keeps track of users' data usage.\",\n      'Created a downloadable CLI bandwidth monitor application with integrated CRUD operations allowing users to locally track data usage on a session-by-session basis.',\n    ],\n  },\n  {\n    company: 'Car Management',\n    position: 'Car Dealership Management Application',\n    link: 'https://gitlab.com/GTech_/car-management',\n    daterange: '',\n    points: [\n      'Developed a full-stack web application that enabled functions to include employee tracking, workflow management, and sales reporting, for a car dealership.',\n      'Implemented the services microservice utilizing Django, REST API, and Docker; allowing clients to schedule appointments via forms; this process required the use of CRUD operations.',\n      'Integrated a poller used to efficiently receive value objects from accompanying microservices.',\n    ],\n  },\n  {\n    company: 'Conference Go',\n    position: 'Conference Aggregator',\n    link: 'https://gitlab.com/GTech_/fearless-front-end-gs',\n    daterange: '',\n    points: [\n      'Invented a full-stack web application using Django that enabled attendee management for various conferences in the United States.',\n      'Employed multiple third-party APIs to retrieve images and track weather for the location of each conference.',\n      'Implemented RabbitMQ pub/sub for effective communication with the backend.',\n    ],\n  },\n];\n\nexport default projects;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Projects from '../components/Resume/PersonalProjects';\nimport Skills from '../components/Resume/Skills';\nimport References from '../components/Resume/References';\n\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport projects from '../data/resume/projects';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'Personal Projects',\n  'Skills',\n  'References',\n];\n\nconst Resume = () => (\n  <Main title=\"Resume\" description=\"Gilan Serrant's Resume.\">\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">\n            <Link to=\"resume\">Resume</Link>\n          </h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>\n            ))}\n          </div>\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      <Projects data={projects} />\n      <Skills />\n      <References />\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","degree","href","link","school","year","Education","id","map","defaultProps","company","position","daterange","points","point","Experience","job","Projects","to","sections","Main","title","description","sec","toLowerCase","degrees","positions","projects"],"sourceRoot":""}